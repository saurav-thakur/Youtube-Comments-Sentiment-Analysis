name: Sentiment Analysis ML Pipeline Github Actions

on:
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "README.md"
  push:
    branches: ["main"]
    paths-ignore:
      - "README.md"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-ecr-image:
    name: Continuous-Integration
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    strategy:
      matrix:
        python-version: [3.11.2]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Installing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt

      - name: Running Test Cases
        run: pytest tests/test_app.py

      - name: Install Utilities
        run: |
          sudo apt-get install -y jq unzip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug ECR Info
        run: |
          echo "AWS Region: ${{ secrets.AWS_REGION }}"
          echo "ECR Repository: ${{ secrets.ECR_REPO }}"
          echo "ECR Registry: ${{ steps.login-ecr.outputs.registry }}"
          aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPO }} || echo "Repository does not exist"

      - name: Build, tag and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: ${{secrets.ECR_REPO}}
          IMAGE_TAG: latest

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  Continuous-Deployment:
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Run Docker Image to Serve Users
        run: |
          docker run -d -e AWS_ACCESS_KEY_ID="${{secrets.AWS_ACCESS_KEY_ID}}" -e AWS_SECRET_ACCESS_KEY="${{secrets.AWS_SECRET_ACCESS_KEY}}" -e AWS_REGION="${{secrets.AWS_REGION}}" -e MONGO_DB_CONNECTION_URL="${{secrets.MONGO_DB_CONNECTION_URL}}" -e YOUTUBE_DEVELOPER_KEY="${{secrets.YOUTUBE_DEVELOPER_KEY}}" -p 8080:8080 "${{ steps.login-ecr.outputs.registry }}"/"${{ secrets.ECR_REPO }}":latest
